using System;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.SqlClient;
using ExistsForAll.DapperExtensions.Mapper;
using Xunit;

namespace ExistsForAll.DapperExtensions.IntegrationTests
{
    public class UnitTest1
    {
        [Fact]
        public void Test1()
        {
            string con = "Server=localhost,1401;User Id = sa; Password=<YourNewStrong!Passw0rd>";

            // var c = new SqlConnection(con);


//            using (var cnn = new SqlConnection(con))
//            {
//                cnn.Open();
//                var cmd = cnn.CreateCommand();
//                cmd.CommandText = @"
//If (Object_Id('Posts') Is Null)
//Begin
//	Create Table Posts
//	(
//		Id int identity primary key, 
//		[Text] varchar(max) not null, 
//		CreationDate datetime not null, 
//		LastChangeDate datetime not null,
//		Counter1 int,
//		Counter2 int,
//		Counter3 int,
//		Counter4 int,
//		Counter5 int,
//		Counter6 int,
//		Counter7 int,
//		Counter8 int,
//		Counter9 int
//	);

//	Set NoCount On;
//	Declare @i int = 0;

//	While @i <= 5001
//	Begin
//		Insert Posts ([Text],CreationDate, LastChangeDate) values (replicate('x', 2000), GETDATE(), GETDATE());
//		Set @i = @i + 1;
//	End
//End
//";
//                cmd.Connection = cnn;
//                cmd.ExecuteNonQuery();
//            }


            var t = new DapperExtensionsBuilder().BuildImplementor(new[] {GetType().Assembly},
                new DapperExtensionsConfiguration());


            using (var cnn = new SqlConnection(con))
            {
                var post = t.DapperImplementor.Get<Post>(cnn, 1, null, null);


            }


        }
    }

    public class Post
    {
        public int Id { get; set; }
        public string Text { get; set; }
        public DateTime CreationDate { get; set; }
        public DateTime LastChangeDate { get; set; }
        public int? Counter1 { get; set; }
        public int? Counter2 { get; set; }
        public int? Counter3 { get; set; }
        public int? Counter4 { get; set; }
        public int? Counter5 { get; set; }
        public int? Counter6 { get; set; }
        public int? Counter7 { get; set; }
        public int? Counter8 { get; set; }
        public int? Counter9 { get; set; }
    }

    public class PostMap : ClassMapper<Post>
    {
        public PostMap()
        {
            Table("Posts");

            Key(x => x.Id).GeneratedBy.AutoGenerated();

            Map(x => x.Text);
            Map(x => x.CreationDate);
            Map(x => x.LastChangeDate);
            Map(x => x.Counter1);
            Map(x => x.Counter2);
            Map(x => x.Counter3);
            Map(x => x.Counter4);
            Map(x => x.Counter5);
            Map(x => x.Counter6);
            Map(x => x.Counter7);
            Map(x => x.Counter8);
            Map(x => x.Counter9);
        }
    }

}
